// <auto-generated />
using System;
using DogSitterMarketplaceDal.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogSitterMarketplaceDal.Migrations
{
    [DbContext(typeof(WorkContext))]
    [Migration("20230412192244_AddTAblesWork")]
    partial class AddTAblesWork
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Pets.AnimalTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<string>("Parameters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalTypeEntity");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Pets.PetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Characteristics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("PetEntity");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Users.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassportDataId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PassportDataId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Users.UserPassportDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserPassportDataEntity");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Users.UserRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoleEntity");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Users.UserStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserStatusEntity");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.DayOfWeekEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DaysOfWeek");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.LocationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.LocationWorkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsNotActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("LocationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(6,2)");

                    b.Property<int?>("SitterWorkId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("SitterWorkId");

                    b.ToTable("LocationWorks");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.SitterWorkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("SitterWorks");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.TimingLocationWorkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DayOfWeekId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("LocationWorkId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Start")
                        .IsRequired()
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan?>("Stop")
                        .IsRequired()
                        .HasColumnType("time(0)");

                    b.HasKey("Id");

                    b.HasIndex("DayOfWeekId");

                    b.HasIndex("LocationWorkId");

                    b.ToTable("TimingLocationWorks");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.WorkTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Pets.PetEntity", b =>
                {
                    b.HasOne("DogSitterMarketplaceDal.Models.Pets.AnimalTypeEntity", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogSitterMarketplaceDal.Models.Users.UserEntity", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Users.UserEntity", b =>
                {
                    b.HasOne("DogSitterMarketplaceDal.Models.Users.UserPassportDataEntity", "PassportData")
                        .WithMany()
                        .HasForeignKey("PassportDataId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DogSitterMarketplaceDal.Models.Users.UserRoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogSitterMarketplaceDal.Models.Users.UserStatusEntity", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PassportData");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.LocationWorkEntity", b =>
                {
                    b.HasOne("DogSitterMarketplaceDal.Models.Works.LocationEntity", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogSitterMarketplaceDal.Models.Works.SitterWorkEntity", "SitterWork")
                        .WithMany("LocationWork")
                        .HasForeignKey("SitterWorkId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("SitterWork");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.SitterWorkEntity", b =>
                {
                    b.HasOne("DogSitterMarketplaceDal.Models.Users.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogSitterMarketplaceDal.Models.Works.WorkTypeEntity", "WorkType")
                        .WithMany()
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.TimingLocationWorkEntity", b =>
                {
                    b.HasOne("DogSitterMarketplaceDal.Models.Works.DayOfWeekEntity", "DayOfWeek")
                        .WithMany()
                        .HasForeignKey("DayOfWeekId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogSitterMarketplaceDal.Models.Works.LocationWorkEntity", "LocationWork")
                        .WithMany("TimingLocationWorks")
                        .HasForeignKey("LocationWorkId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DayOfWeek");

                    b.Navigation("LocationWork");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Users.UserEntity", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.LocationWorkEntity", b =>
                {
                    b.Navigation("TimingLocationWorks");
                });

            modelBuilder.Entity("DogSitterMarketplaceDal.Models.Works.SitterWorkEntity", b =>
                {
                    b.Navigation("LocationWork");
                });
#pragma warning restore 612, 618
        }
    }
}
